<Page x:Class="WpfBinding.Views.BindingExamplePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfBinding.Views" 
      xmlns:viewmodels="clr-namespace:WpfBinding.ViewModels" 
      d:DataContext="{d:DesignInstance Type=viewmodels:BindingExampleViewModel}"
      mc:Ignorable="d" 
      d:DesignHeight="275" d:DesignWidth="650"
      Title="BindingExamplePage">
    <DockPanel>
        <DockPanel DockPanel.Dock="Top" Margin="20">
            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition  Width="20" />
                        <ColumnDefinition  Width="2*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <Label Content="ViewModel Value1 (Update On LostFocus)" VerticalAlignment="center" />
                    <TextBox Text="{Binding Value1, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnNotifyDataErrors=True }" 
                             ToolTip="Field will not update until another element is focused"
                             Grid.Row="1" Grid.Column="0"/>

                    <Label Content="Model Value" Grid.Row="0" Grid.Column="2" VerticalAlignment="center" />
                    <Border BorderBrush="Black" BorderThickness="2" Grid.Row="1" Grid.Column="2">
                        <TextBlock Text="{Binding Value1, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                    </Border>

                    <Label Content="ViewModel Value2 (Update On PropertyChanged, double property)" Grid.Row="2" Grid.Column="0" VerticalAlignment="center"/>
                    <TextBox Text="{Binding Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True }" 
                             ToolTip="Field will update after each keystroke, only numbers are allowed characters, cannot type periods"
                             Grid.Row="3" Grid.Column="0"   />
                    <Label Content="Model Value" Grid.Row="2" Grid.Column="2" VerticalAlignment="center"/>
                    <Border BorderBrush="Black" BorderThickness="2" Grid.Row="3" Grid.Column="2">
                        <TextBlock Text="{Binding Value2, Mode=TwoWay}"  VerticalAlignment="Center" HorizontalAlignment="Center"  />
                    </Border>

                    <Label Content="ViewModel Value3 (Update On PropertyChanged, string property)" Grid.Row="4" Grid.Column="0" VerticalAlignment="center"/>
                    <TextBox Text="{Binding Value3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True }" 
                             ToolTip="Field will update after each keystroke"
                             Grid.Row="5" Grid.Column="0" />

                    <!-- This is an alternate way to declare the textbox -->
                    <!--<TextBox Grid.Row="5" Grid.Column="0">
                        <TextBox.Text>
                            <Binding Path="Value3" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnNotifyDataErrors="True" />
                        </TextBox.Text>
                    </TextBox>-->
                    
                    <Label Content="Model Value" Grid.Row="4" Grid.Column="2" VerticalAlignment="center"/>
                    <Border BorderBrush="Black" BorderThickness="2" Grid.Row="5" Grid.Column="2">
                        <TextBlock Text="{ Binding ModelValue3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                    </Border>
                </Grid>
            </Grid>
        </DockPanel>

        <Grid DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray">
            <Button Command="{ Binding Path=ResetCommand }" Content="Reset" Width="100" HorizontalAlignment="Right" Margin="0,12,10,10"/>
        </Grid>
    </DockPanel>
</Page>
